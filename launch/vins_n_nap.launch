<launch>

  <!-- Corridor #02 -->
  <!--
  <arg name="bag_base" default="/media/mpkuse/Bulk_Data/other_seqs/tony_bags/"/>
  <arg name="bag_name" default="corridor_02.bag"/>
  <node name="rosbag" pkg="rosbag" type="play" args="-s=0 -u=310 $(arg bag_base)/$(arg bag_name)" output="screen" />-->


<!--############## Parking Lot #03 #############-->
<!--
  <arg name="bag_base" default="/media/mpkuse/Bulk_Data/other_seqs/tony_bags/"/>

  <arg name="bag_name" default="parking_lot_01.bag"/>
  <node name="rosbag" pkg="rosbag" type="play" args="-s 20  $(arg bag_base)/$(arg bag_name)" output="screen" />


  <arg name="bluefox_topic" default="/mv_25001498/image_raw"/>
  <arg name="imu_topic" default="/imu_3dm_gx4/imu"/>
  <arg name="color_image_topic" default="/mv_29900616/image_raw_resized"/>
-->
<!--############## END Parking Lot #############-->


<!-- DJI Cam -->
<arg name="bag_base" default="/media/mpkuse/Bulk_Data/other_seqs/tony_bags/"/>
<arg name="bag_name" default="dji_00.bag"/>
<node name="rosbag" pkg="rosbag" type="play" args="-s 12 $(arg bag_base)/$(arg bag_name)" output="log" />

<arg name="bluefox_topic" default="/mv_25001498/image_raw"/>
<arg name="imu_topic" default="/imu_3dm_gx4/imu"/>
<arg name="color_image_topic" default="/dji_sdk/image_raw_resized"/>




    <node name="feature_tracker" pkg="feature_tracker" type="feature_tracker" output="log">
        <!-- camera calibration file. Be care about the format -->
        <param name="calib_dir" type="string" value="$(find feature_tracker)/../config/3dm/" />
        <param name="cam_name0" type="string" value="camera_calib.yaml" />
        <!-- max feature number in feature tracker -->
        <param name="max_cnt" type="int" value="150" />
        <!-- min distance between two features -->
        <param name="min_dist" type="int" value="20" />
        <!-- frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image topic -->
        <param name="freq" type="int" value="15" />
        <!-- ransac threshold -->
        <param name="F_threshold" type="double" value="1.0" />
        <!-- show tracking result. publish as rostopic-->
        <param name="show_track" type="bool" value="true" />
        <!-- if image is too dark or light, trun on equalize to find enough features -->
        <param name="equalize" type="bool" value="false" />
        <!-- if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points -->
        <param name="fisheye" type="bool" value="false" />
        <!-- remap to your imu and image topic-->
        <!-- <remap from="~imu" to="/imu_3dm_gx4/imu" />
        <remap from="~raw_image" to="/mv_25001498/image_raw" />-->
        <remap from="~imu" to="$(arg imu_topic)" />
        <remap from="~raw_image" to="$(arg bluefox_topic)" />

    </node>
    <node name="vins_estimator" pkg="vins_estimator" type="vins_estimator" output="log">
        <!-- main solver itration time (ms), to guarantee real time -->
        <param name="solver_time" type="double" value="0.040" />
        <param name="max_num_iterations" type="int" value="8" />
        <!-- keyframe selection threshold -->
        <param name="keyframe_parallax" type="double" value="10.0" />
        <!--Extrinsic parameter between IMU and Camera.
        if you provide accurate extrinsic parameter, set estimate_extrinsic false;
        if you cannot provide accurate extirnsic parameter, try to give a rough initial guess, and set estimate_extrinsic true. The extrinsic calibration result will be written into ../config/ex_calib_result.yaml. Note that sufficitent motion is need to fully calibrate extrinsic parameters-->
        <param name="imu_cam_extrinsic" type="string" value="$(find vins_estimator)/../config/3dm/3dm_extrinsic.yaml" />
        <param name="estimate_extrinsic" type="bool" value="false" />
        <param name="ex_calib_result_path" type="string" value="$(find vins_estimator)/../config/3dm/ex_calib_result.yaml" />
        <!-- IMU noise information.
        acc_n: accelerometer measurement noise standard deviation.
        gyr_n: gyroscope measurement noise standard deviation.
        acc_w: accelerometer bias random work noise standard deviation.
        gyr_w: gyroscope bias random work noise standard deviation.
        Not very important. The more accurate parameters you provide, the better performance you will get-->
        <param name="acc_n" type="double" value="0.2" />
        <param name="gyr_n" type="double" value="0.1" />
        <param name="acc_w" type="double" value="0.00002" />
        <param name="gyr_w" type="double" value="4.0e-6" />
        <param name="g_norm" type="double" value="9.805" />
        <!-- Remap to your imu topic -->
        <!--<remap from="~imu" to="/imu_3dm_gx4/imu" />-->
        <remap from="~image" to="/feature_tracker/image" /> <!-- this is point cloud from above node-->
        <remap from="~imu" to="$(arg imu_topic)" />

    </node>


    <node name="nap" pkg="nap" type="nap_time_node.py" output="screen" >
      <remap to="$(arg color_image_topic)" from="/semi_keyframes"/>
    </node>

    <node name="rvizvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find nap)/rviz/euroc.rviz" />
    <node name="nap_viz" pkg="nap" type="colocation_viz.py" output="screen" />

</launch>
