<launch>

<machine name="tx2" address="192.168.3.5" user="nvidia" password="" env-loader="/home/nvidia/roslaunch_env.sh"/>
<!-- <machine name="i7" address="192.168.3.3" user="i7-2" password="1" env-loader="/home/i72/roslaunch_env.sh"/> -->


<!-- Start Camera (point grey camera) -->
    <arg name="device" default = "17302081"/>
    <arg name="rate" default="30"/>

    <node name="single_reader" pkg="ptgrey_reader" type="single_reader"
         ns="pg_$(arg device)" output="log">
        <remap from="/image_out" to="image_raw" />
        <remap from="/image_out_roi" to="image" />
        <param name="is_pub" type="bool" value="true"/>
        <param name="is_show" type="bool" value="false"/>
        <param name="is_print" type="bool" value="false"/>
        <param name="serialNum" type="int" value="$(arg device)"/>
        <param name="frameRate" type="double" value="$(arg rate)"/>
        <param name="is_auto_shutter" type="bool" value="true"/>
        <param name="shutter" type="double" value="15.0"/>
        <param name="brightness" type="double" value="10.1"/>
        <param name="exposure" type="double" value="0.8"/>
        <param name="WB_red" type="int" value="550"/>
        <param name="WB_Blue" type="int" value="810"/>
        <param name="gain" type="double" value="5.0"/>
        <rosparam>
            is_sync:   false
            is_grey:   false
            is_roi:    true
            size_x:    1280
            size_y:    1024
            center_x:  640
            center_y:  512
            cropper_x: 1280
            cropper_y: 1024
            down_sample_scale: .5
        </rosparam>
    </node>



<!-- Start IMU
  Note: user need to be in dailout group. This is because the N3 is connected to
  i7 as a ttyUSB device. /dev/ttyUSB0. You either need to set the permissions
  so that the user can access it or best is to add user to group `dailout`.
-->
<node name="djiros" pkg="djiros" type="djiros_withtrigger_node" output="log" launch-prefix="">
    <param name="trigger_freq" type="int" value="15"/>
    <param name="log_level" type="string" value="info"/>
    <param name="serial_name" type="string" value="/dev/ttyUSB0"/>
    <param name="baud_rate" type="int" value="921600"/>
    <param name="app_id" type="int" value="$(env DJIROS_APPID)"/>
    <param name="enc_key" type="string" value="$(env DJIROS_ENCKEY)"/>
    <param name="app_version" type="int" value="1"/>
    <param name="sensor_mode" type="bool" value="false"/>
    <param name="align_with_fmu" type="bool" value="true"/>
</node>



<!-- Start VINS-testbed
  Note: This involves 4 nodes. Remember to confirm yaml config file
  a) feature tracker   : Tracks features
  b) vins_estimator    : IMU+Camera fusion + Marginalization
  c) pose_graph        : Pose Graph Optimization engines. (This is run every 5 sec)
  d) place_recognition : Place recognition. Can use either NAP or DBOW. (currently disabled)
-->

<arg name="config_path" default="$(find feature_tracker)/../config/black_box4/blackbox4.yaml" />
<arg name="vins_path" default="$(find feature_tracker)/../config/../" />

<node name="feature_tracker" pkg="feature_tracker" type="feature_tracker" output="log">
    <param name="config_file" type="string" value="$(arg config_path)" />
    <param name="vins_folder" type="string" value="$(arg vins_path)" />
</node>

<node name="vins_estimator" pkg="vins_estimator" type="vins_estimator" output="log">
   <param name="config_file" type="string" value="$(arg config_path)" />
   <param name="vins_folder" type="string" value="$(arg vins_path)" />
</node>

<node name="pose_graph" pkg="pose_graph" type="pose_graph" output="log">
  <param name="config_file" type="string" value="$(arg config_path)" />
  <param name="visualization_shift_x" type="int" value="0" />
  <param name="visualization_shift_y" type="int" value="0" />
  <param name="skip_cnt" type="int" value="0" />
</node>







<!-- Place Recognition -->
<arg name="bag_color_im_topic" default="/vins_estimator/keyframe_image" />
<arg name="config_path_tx2" default="/home/nvidia/catkin_ws/src/nap/slam_data/blackbox4.yaml" />

<!-- <node machine="tx2" name="dbow_node" pkg="nap" type="dbow3_naive" output="screen">
   <remap to="$(arg bag_color_im_topic)" from="/color_image_inp" />
   <remap from="/colocation_dbow" to="/colocation" />
 </node> -->

 <!-- <node machine="tx2" name="nap" pkg="nap" type="nap_robustdaisy_bf.py" output="screen" > -->
 <node machine="tx2" name="nap" pkg="nap" type="nap_multiproc.py" output="screen" >
   <remap to="$(arg bag_color_im_topic)" from="/semi_keyframes"/>
   <param name="config_file" type="string" value="$(arg config_path_tx2)" />
 </node>

<!-- Geometry Node / Custom Pose Graph Optimization #####
             subscribes to `vins/camera_pose`, `3d_point_cloud`, `napMsg`  -->
     <!-- Note: from config file only the camera intrunsics are read. Need to be consistent with the ones supplied to VINS -->
 <node machine="tx2" name="pgraph_opt" pkg="nap" type="pose_graph_opt_node" output="log">
   <param name="config_file" type="string" value="$(arg config_path_tx2)" />
       <!-- Commentout next line to remove the places-feedback-->
       <!-- <remap from="/colocation_chatter" to="/colocation" /> -->
 </node>





 <!-- RVIZ -->
 <node name="rvizvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find nap)/rviz/nuc_viz.rviz" />

 <!-- AR_demo -->
 <!-- use this if you wish to use the VIO path instead of standard pose_graph optimized path -->
 <!-- <remap from="~camera_path" to="/vins_estimator/camera_path"/> -->

 <!-- if you run this node on i7 use:
 <param name="calib_file" type="string" value="$(arg config_path)"/> -->

 <!-- if you run this node on tx2 use:
 <param name="calib_file" type="string" value="$(arg config_path_tx2)"/>
 also dont forget to se machine="tx2" in <node>
-->

 <!-- <node  machine="tx2" pkg="ar_demo" type="ar_demo_node" name="ar_demo_node" output="log">
     <remap from="~image_raw" to="/pg_17302081/image" doc="input image"/>

     <remap from="~camera_path" to="/pose_graph/pose_graph_camera_path"/>

     <param name="calib_file" type="string" value="$(arg config_path_tx2)"/>
     <param name="box_length" type="double" value="0.8"/>
     <param name="in_x" type="double" value="-7."/>
     <param name="in_y" type="double" value="0."/>
     <param name="in_z" type="double" value="-1.2"/>

     <param name="use_undistored_img" type="bool" value="false"/>
 </node> -->


 <node pkg="ar_demo" type="ar_demo_node" name="ar_demo_node" output="log">
     <remap from="~image_raw" to="/pg_17302081/image" doc="input image"/>
     <remap from="~camera_path" to="/pose_graph/pose_graph_camera_path"/>

     <param name="calib_file" type="string" value="$(arg config_path)"/>
     <param name="box_length" type="double" value="0.8"/>
     <param name="in_x" type="double" value="-7."/>
     <param name="in_y" type="double" value="0."/>
     <param name="in_z" type="double" value="-1.2"/>

     <param name="use_undistored_img" type="bool" value="false"/>
 </node>
</launch>
